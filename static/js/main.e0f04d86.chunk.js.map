{"version":3,"sources":["components/transitions/fade-in.js","components/board/character.js","components/board/characterBox.js","components/board/scoredisplay.js","components/board/board.js","components/footer/footer.js","components/header/header.js","App.js","registerServiceWorker.js","index.js"],"names":["FadeIn","defaultStyle","transition","props","duration","transitionDelay","delay","opacity","position","transitionStyles","entering","direction","length","entered","Transition","in","this","timeout","appear","state","style","children","Component","Character","handleClick","onCharacterClick","index","className","src","character","img","alt","onClick","CharacterBox","characters","map","key","name","ScoreDisplay","score","shuffleArray","arr","a","Math","random","sort","b","initialChars","clicked","Board","setState","user","current","Footer","href","target","rel","Header","App","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0f04d86.chunk.js","sourcesContent":["//this file is for my transitions\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { Transition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class FadeIn extends Component {\r\n\tdefaultStyle = {\r\n\t\ttransition: `all ${this.props.duration}ms ease-in-out`,\r\n\t\ttransitionDelay: this.props.delay || '0',\r\n\t\topacity: 0,\r\n\t\tposition: 'relative'\r\n\t};\r\n\r\n\ttransitionStyles = {\r\n\t\tentering: {\r\n\t\t\topacity: 0,\r\n\t\t\t[this.props.direction]: this.props.length || '50px'\r\n\t\t},\r\n\t\tentered: {\r\n\t\t\topacity: 1,\r\n\t\t\t[this.props.direction]: '0'\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Transition in={this.props.in || true} timeout={this.props.duration} appear={true}>\r\n\t\t\t\t{(state) => (\r\n\t\t\t\t\t<div style={{ ...this.defaultStyle, ...this.transitionStyles[state] }}>{this.props.children}</div>\r\n\t\t\t\t)}\r\n\t\t\t</Transition>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nFadeIn.propTypes = {\r\n\tdelay: PropTypes.string,\r\n\tdirection: PropTypes.string,\r\n\tduration: PropTypes.number.isRequired,\r\n\tlength: PropTypes.string\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport FadeIn from '../transitions/fade-in';\r\n\r\nexport default class Character extends Component {\r\n\t//this is all my fade-in logic\r\n\thandleClick = () => {\r\n\t\tthis.props.onCharacterClick(this.props.index);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<FadeIn delay=\"1.5s\" duration={500}>\r\n\t\t\t\t<div className=\"character\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={this.props.character.img}\r\n\t\t\t\t\t\talt=\"character\"\r\n\t\t\t\t\t\tclassName=\"profile-pic\"\r\n\t\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</FadeIn>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Character from './character';\r\n\r\n//this is for my character boxes.\r\nconst CharacterBox = (props) => {\r\n\treturn (\r\n\t\t<div className=\"character-box\">\r\n\t\t\t{props.characters.map((character, index) => (\r\n\t\t\t\t<Character\r\n\t\t\t\t\tcharacter={character}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tonCharacterClick={props.onCharacterClick}\r\n\t\t\t\t\tkey={character.name}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CharacterBox;\r\n","import React from 'react';\r\n\r\nconst ScoreDisplay = (props) => <div className=\"score-keeper\">Score: {props.score}</div>;\r\n\r\nexport default ScoreDisplay;\r\n","import React, { Component } from \"react\";\r\n\r\nimport FadeIn from \"../transitions/fade-in\";\r\nimport CharacterBox from \"./characterBox\";\r\nimport ScoreDisplay from \"./scoredisplay\";\r\n\r\n//this is my shuffle array.\r\nconst shuffleArray = (arr) => arr.map((a) => [ Math.random(), a ]).sort((a, b) => a[0] - b[0]).map((a) => a[1]);\r\n\r\nconst initialChars = [\r\n\t{\r\n\t\tname: \"Arya Stark\",\r\n\t\timg: \"img/characterimages/arya-stark.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Bran Stark\",\r\n\t\timg: \"img/characterimages/bran-stark.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Cersei Lannister\",\r\n\t\timg: \"img/characterimages/cersei-lannister.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Daenerys Targaryen\",\r\n\t\timg: \"img/characterimages/daenerys-targaryen.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Hodor\",\r\n\t\timg: \"img/characterimages/hodor.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Jaime Lannister\",\r\n\t\timg: \"img/characterimages/jaime-lannister.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Joffrey Baratheon\",\r\n\t\timg: \"img/characterimages/joffrey-baratheon.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Jon Snow\",\r\n\t\timg: \"img/characterimages/jon-snow.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Melisandre\",\r\n\t\timg: \"img/characterimages/melisandre.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Ned Stark\",\r\n\t\timg: \"img/characterimages/ned-stark.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"The Night King\",\r\n\t\timg: \"img/characterimages/night-king.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Robb Stark\",\r\n\t\timg: \"img/characterimages/robb-stark.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Sansa Stark\",\r\n\t\timg: \"img/characterimages/sansa-stark.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"The Hound\",\r\n\t\timg: \"img/characterimages/the-hound.gif\",\r\n\t\tclicked: false\r\n\t},\r\n\t{\r\n\t\tname: \"Tyrion Lannister\",\r\n\t\timg: \"img/characterimages/tyrion-lannister.gif\",\r\n\t\tclicked: false\r\n\t}\r\n];\r\n\r\nexport default class Board extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tuser: {\r\n\t\t\t\tscore: 0\r\n\t\t\t},\r\n\t\t\tcharacters: shuffleArray(initialChars)\r\n\t\t};\r\n\t}\r\n\r\n\t//this begins the shuffle when the character is clicked.\r\n\tonCharacterClick = (index) => {\r\n\t\tif (!this.state.characters[index].clicked) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcharacters: shuffleArray(\r\n\t\t\t\t\tthis.state.characters.map((character, current) => {\r\n\t\t\t\t\t\treturn current === index ? { ...character, clicked: true } : character;\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\t\tuser: {\r\n\t\t\t\t\t...this.state.user,\r\n\t\t\t\t\tscore: this.state.user.score + 1\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcharacters: shuffleArray(\r\n\t\t\t\t\tthis.state.characters.map((character) => {\r\n\t\t\t\t\t\treturn { ...character, clicked: false };\r\n\t\t\t\t\t})\r\n\t\t\t\t),\r\n\t\t\t\tuser: {\r\n\t\t\t\t\t...this.state.user,\r\n\t\t\t\t\tscore: 0\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Board\">\r\n\t\t\t\t<FadeIn in={true} duration={450} length={\"30px\"} direction={\"bottom\"} delay={\"1s\"}>\r\n\t\t\t\t\t<h4>\r\n\t\t\t\t\t\tTry to click on every Game of Thrones character once. Once you click on a character, the grid\r\n\t\t\t\t\t\twill shuffle.<br />Try not to click the same Game of Thrones character twice or the game will\r\n\t\t\t\t\t\tstart over. Have fun!\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t</FadeIn>\r\n\t\t\t\t<FadeIn in={true} duration={500} direction={\"bottom\"} delay={\"1.5s\"}>\r\n\t\t\t\t\t<ScoreDisplay score={this.state.user.score} />\r\n\t\t\t\t</FadeIn>\r\n\t\t\t\t<CharacterBox characters={this.state.characters} onCharacterClick={this.onCharacterClick} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport FadeIn from '../transitions/fade-in';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"Footer\">\r\n\t\t\t<FadeIn delay={'1s'} direction={'top'} length={'20px'} duration={500}>\r\n\t\t\t\t<a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<h3 />\r\n\t\t\t\t</a>\r\n\t\t\t</FadeIn>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport FadeIn from '../transitions/fade-in';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className=\"App-header\">\r\n\t\t\t<FadeIn in={true} duration={600} length={'30px'} direction={'bottom'}>\r\n\t\t\t\t{/* <h2>David M. Stanley Jr.</h2> */}\r\n\t\t\t</FadeIn>\r\n\t\t\t<FadeIn in={true} duration={600} length={'50px'} direction={'bottom'}>\r\n\t\t\t\t<h1>Game of Thrones Clicky Game</h1>\r\n\t\t\t</FadeIn>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\n\nimport Board from './components/board/board';\nimport Footer from './components/footer/footer';\nimport Header from './components/header/header';\nimport './App.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<Board />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}